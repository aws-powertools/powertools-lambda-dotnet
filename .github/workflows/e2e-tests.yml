# PROCESS
#
# 1. Deploy the core and AOT stacks using the infra deployment workflow.
# 2. Run the E2E tests after the infrastructure is deployed.
# 3. Destroy the CDK stacks after the tests are completed.

# USAGE
#
# This workflow is triggered on push to the develop branch or manually via workflow_dispatch.

name: E2E Tests

on:
  workflow_dispatch:
  push:
    branches:
      - develop

permissions:
  id-token: write
  contents: read

jobs:
  deploy-stack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          role-to-assume: ${{ secrets.E2E_DEPLOY_ROLE }}
          aws-region: us-east-1
          mask-aws-account-id: true

      - name: Set up .NET
        uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3
        with:
          dotnet-version: '8.x'

      - name: Install CDK
        run: npm install -g aws-cdk

      - name: Install AWS Lambda .NET CLI Tools
        run: dotnet tool install -g Amazon.Lambda.Tools

      - name: Deploy Core Stack
        run: |
          cd libraries/tests/e2e/infra
          cdk deploy --require-approval never

#  deploy-aot-stack:
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        architecture: [ x86_64, arm64 ]
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
#        with:
#          role-to-assume: ${{ secrets.E2E_DEPLOY_ROLE }}
#          aws-region: us-east-1
#
#      - name: Set up .NET
#        uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3
#        with:
#          dotnet-version: '8.x'
#
#      - name: Install CDK
#        run: npm install -g aws-cdk
#        
#      - name: Install AWS Lambda .NET CLI Tools
#        run: dotnet tool install -g Amazon.Lambda.Tools
#        
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a
#        with:
#          platforms: ${{ matrix.architecture }}
#          
#      - name: Set up Docker Buildx
#        id: builder
#        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0
#        with:
#          install: true
#          driver: docker
#          platforms: linux/amd64,linux/arm64
#
#      - name: Deploy AOT Stack
#        run: |
#          cd libraries/tests/e2e/infra-aot
#          cdk deploy -c architecture=${{ matrix.architecture }} --require-approval never

  run-tests:
    runs-on: ubuntu-latest
    needs: deploy-stack
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          role-to-assume: ${{ secrets.E2E_DEPLOY_ROLE }}
          aws-region: us-east-1
          mask-aws-account-id: true
          
      - name: Set up .NET
        uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3
        with:
          dotnet-version: '8.x'

      - name: Run Core Tests
        run: |
          cd libraries/tests/e2e/functions/core
          dotnet test

  destroy-stack:
    runs-on: ubuntu-latest
    needs: run-tests
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          role-to-assume: ${{ secrets.E2E_DEPLOY_ROLE }}
          aws-region: us-east-1
          mask-aws-account-id: true

      - name: Install CDK
        run: npm install -g aws-cdk
        
      - name: Install AWS Lambda .NET CLI Tools
        run: dotnet tool install -g Amazon.Lambda.Tools

      - name: Destroy Core Stack
        run: |
          cd libraries/tests/e2e/infra
          cdk destroy --force
          
#  destroy-aot-stack:
#    runs-on: ubuntu-latest
#    needs: run-tests
#    if: always()
#    strategy:
#      fail-fast: false
#      matrix:
#        architecture: [ x86_64, arm64 ]
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
#        with:
#          role-to-assume: ${{ secrets.E2E_DEPLOY_ROLE }}
#          aws-region: us-east-1
#          mask-aws-account-id: true
#
#      - name: Install CDK
#        run: npm install -g aws-cdk
#
#      - name: Install AWS Lambda .NET CLI Tools
#        run: dotnet tool install -g Amazon.Lambda.Tools
#
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a
#        with:
#          platforms: ${{ matrix.architecture }}
#
#      - name: Set up Docker Buildx
#        id: builder
#        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0
#        with:
#          install: true
#          driver: docker
#          platforms: linux/amd64,linux/arm64
#
#      - name: Destroy Core AOT Stack
#        run: |
#          cd libraries/tests/e2e/infra-aot
#          cdk destroy -c architecture=${{ matrix.architecture }} --force
