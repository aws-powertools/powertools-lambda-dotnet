name: Build .NET

on:
  push:
    paths:
      - "libraries/**"
    branches: [develop, main]
  pull_request:
    paths:
      - "libraries/**"
    branches: [develop, main]

defaults:
  run:
    working-directory: ./libraries

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0.x', '8.0.x']
        include:
          - dotnet-version: '6.0.x'
            framework: 'net6.0'
            build-props: '/p:TargetFramework=net6.0'
          - dotnet-version: '8.0.x'
            framework: 'net8.0'
            build-props: '/p:TargetFramework=net8.0'
      fail-fast: false
            
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      
      - name: Setup .NET ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@3951f0dfe7a07e2313ec93c75700083e2005cbab # 4.3.0
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
            
      - name: Install dependencies
        run: dotnet restore ${{ matrix.build-props }}
        
      - name: Build
        run: dotnet build --configuration Release --no-restore ${{ matrix.build-props }}
      
      - name: Test Examples
        run: dotnet test ../examples/ ${{ matrix.build-props }} --verbosity quiet
      
      - name: Test & Code Coverage
        run: dotnet test --no-restore ${{ matrix.build-props }} --filter "Category!=E2E" --collect:"XPlat Code Coverage" --results-directory ./codecov/${{ matrix.framework }} --verbosity quiet
      
      - name: Codecov
        uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 # 5.3.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ matrix.framework }}
          fail_ci_if_error: false
          name: codecov-lambda-powertools-dotnet-${{ matrix.framework }}
          verbose: true
          directory: ./libraries/codecov/${{ matrix.framework }}
